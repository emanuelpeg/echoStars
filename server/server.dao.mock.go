// Code generated by MockGen. DO NOT EDIT.
// Source: server/server.dao.go
//
// Generated by this command:
//
//	mockgen.exe -source=server/server.dao.go -destination=server/server.dao.mock.go -package=server
//
// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockServerDaoI is a mock of ServerDao interface.
type MockServerDaoI struct {
	ctrl     *gomock.Controller
	recorder *MockServerDaoIMockRecorder
}

// MockServerDaoIMockRecorder is the mock recorder for MockServerDaoI.
type MockServerDaoIMockRecorder struct {
	mock *MockServerDaoI
}

// NewMockServerDaoI creates a new mock instance.
func NewMockServerDaoI(ctrl *gomock.Controller) *MockServerDaoI {
	mock := &MockServerDaoI{ctrl: ctrl}
	mock.recorder = &MockServerDaoIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerDaoI) EXPECT() *MockServerDaoIMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockServerDaoI) Create(server *Server) (*Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", server)
	ret0, _ := ret[0].(*Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockServerDaoIMockRecorder) Create(server any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServerDaoI)(nil).Create), server)
}

// Delete mocks base method.
func (m *MockServerDaoI) Delete(url *string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", url)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockServerDaoIMockRecorder) Delete(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockServerDaoI)(nil).Delete), url)
}

// GetAll mocks base method.
func (m *MockServerDaoI) GetAll() ([]*Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockServerDaoIMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockServerDaoI)(nil).GetAll))
}
